{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","id","email","className","alt","src","CardList","robots","CardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","cons_searchfield","target","value","state","cons_robots","fetch","response","json","filterRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCICQ,G,MATF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,GAAGC,EAAU,EAAVA,MACnB,OACI,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,cAChB,6BAAKD,IACL,4BAAIE,SCODI,EAZE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAETC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAO,cAAC,EAAD,CAAcV,GAAIM,EAAOI,GAAGV,GAAID,KAAMO,EAAOI,GAAGX,KAAME,MAAOK,EAAOI,GAAGT,OAA5DS,MAGtB,OACA,8BACCH,KCDUI,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAAeC,SAAUH,OCKhGI,G,MARD,SAACC,GACf,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAQ,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,aC+CAC,E,kDA3CX,aAAc,IAAD,8BACT,gBAcJC,eAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,iBAAiBF,EAAMG,OAAOC,SAd7C,EAAKC,MAAM,CACRC,YAAY,GACXJ,iBAAiB,IAJZ,E,gEAQO,IAAD,OAEfK,MAAM,8CACLxC,MAAK,SAAAyC,GAAQ,OAAEA,EAASC,UACxB1C,MAAK,SAAAiB,GAAI,OAAE,EAAKiB,SAAS,CAACK,YAAYtB,S,+BAQjC,IAAD,OACC0B,EAAaC,KAAKN,MAAMC,YAAYM,QAAO,SAAA/B,GAC7C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKT,MAAMH,iBAAiBW,kBAG1E,OAAmC,IAAhCF,KAAKN,MAAMC,YAAYS,OAChB,yCAIF,sBAAKtC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ6B,a,GApCpBM,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.cc65aad6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport 'tachyons';\r\nconst Card = ({name,id,email}) =>{\r\n    return(\r\n        <div className='tc br3 dib bg-light-green ma2 pa3 bw2 grow shadow-5'>\r\n        <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) =>{\r\n\r\n    const CardComponent = robots.map((user,i)=>{\r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\n\r\n    return(\r\n    <div>\r\n    {CardComponent}\r\n      </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange,}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n        <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots'onChange={searchChange}/>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox; ","import React from 'react';\r\n\r\nconst Scroll =(props) =>{\r\nreturn(\r\n    <div style={{overflow:'scroll', border: '5px solid black', height:'800px'}}>\r\n        {props.children}\r\n\r\n    </div>\r\n)\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\n\r\n// super class \r\nclass App extends Component {\r\n    // constructor to initialize \r\n    constructor(){\r\n        super();\r\n        this.state={\r\n           cons_robots:[],\r\n            cons_searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // fetching data from link and get  response in json format from link \r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(user=>this.setState({cons_robots:user}))\r\n    }\r\n\r\n    onSearchChange =(event)=>{\r\n        this.setState({cons_searchfield:event.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const filterRobots=this.state.cons_robots.filter(robots=>{\r\n            return(robots.name.toLowerCase().includes(this.state.cons_searchfield.toLowerCase()))\r\n        })\r\n\r\n        if(this.state.cons_robots.length===0){\r\n           return <h1>loading</h1>\r\n        }\r\n        else{\r\n            return(     \r\n                <div className='tc'>\r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filterRobots}/>\r\n                </Scroll>\r\n                </div>\r\n             );\r\n        }\r\n\r\n\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './Container/App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}